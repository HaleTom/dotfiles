#!/bin/bash #for-shellcheck

alias alia_debug='shell-quote null alias: '   # For debugging ~/bin/alia

# This file gets sourced from .bashrc and ~/bin/alia to allow for: $ nice alia <alias>

# shellcheck disable=SC2142  # Allow positional parameters to aliases (via function call)
# shellcheck disable=2139    # Allow variable expansion at definition time
# Issue: SC2142 occurs when parameters are used in a function #1263
# https://github.com/koalaman/shellcheck/issues/1263

# Alias colourify to '' if /etc/profile.d/grc.bashrc sourced
if ! alias colourify &> /dev/null; then
  alias colourify=''
fi

# ls aliases
# LS_BLOCK_SIZE = Separate thousands with ','
# https://www.gnu.org/software/coreutils/manual/html_node/Block-size.html
# -C = list entries by columns
# -F, --classify = append indicator (one of */=>@|) to entries
alias ls="colourify ls -CF --block-size=\\'1 --color=always --quoting-style=shell-escape"
# exa:  https://github.com/ogham/exa/issues/407
# exa: https://github.com/ogham/exa/issues/211#issuecomment-412268723
# EXA_GRID_ROWS=15 exa -la --header --group --grid --bytes --color-scale --git
alias la='ls -A'       # Almost all - no . and ..
alias lal='ls -la'
alias lsdir='ls -dla * --color=always | grep "^d" --color=never'   # non-hidden directories
alias lsDir='ls -Al --color=always | grep --color=never ^d'   # directories including hidden
alias lal='ls -la'
alias ll='ls -l'
alias l.='ls -d .[^.]?*' # Hidden files except . and .. (current directory only)

alias source='builtin source source-file source "$#" "$@"'
alias      .='builtin source source-file .      "$#" "$@"'

alias cdh='cd $HOME'  # for enhancd https://github.com/b4b4r07/enhancd/issues/72
alias -- -='builtin cd -' # go to previous dir
alias ..='builtin cd ..'
alias ...='builtin cd ../..'
alias ....='builtin cd ../../..'
alias .....='builtin cd ../../../..'

# One letter aliases
alias g='git'
alias h='history'
alias j='jobs'
alias l='ll'  # l^J for ultimate laziness
alias q='ls'  # mnemonic: q = query
alias r='rake'
alias s='git s'

# Two letters
alias ft='faketty '  # space at end allows next word to be alias-expanded
alias gh='git logda' # Git History
alias jc='journalctl'
alias jn='jupyter-notebook'

# systemctl
alias sc='sudo SYSTEMD_EDITOR=/bin/vi /usr/bin/systemctl'
alias sc_c='sc cat'
alias sc_d='sc disable'
alias sc_dn='sc disable --now'
alias sc_dr='sc daemon-reload'
alias sc_e='sc enable'
alias sc_ed='sc edit'
alias sc_edf='sc edit --full'
alias sc_en='sc enable --now'
alias sc_ld='sc list-dependencies'
alias sc_ldr='sc list-dependencies --reverse'
alias sc_lu='sc list-units'
alias sc_luf='sc list-unit-files'
alias sc_r='sc restart'
alias sc_rf='sc reset-failed'
alias sc_s='sc status'
alias sc_p='sc stop'
alias sc_t='sc start'
# shellcheck disable=SC2142  # Allow positional parameters to aliases (via function call)
alias sc_u='f(){ x="$(alias_expand sc_"$1" | sed -En "s/^sc /systemctl --user /p")" && eval "$x" "$(shell-quote "${@:2}")"; };f'

# Currently done as function
# https://stackoverflow.com/a/34071958/5353461
# alias sbin='export PATH=$(npm bin):$PATH'

# Configuration of base command
alias adbfs='adbfs -o auto_cache,attr_timeout=0.01,big_writes,max_write=999999,auto_unmount'
alias ag='ag --color'
alias aga='ag --all-types --hidden'
alias cal='cal -3' # show 3 months by default
alias cp='cp -i --reflink=auto --sparse=always'
alias Cp='command cp --reflink=auto --sparse=always'  # Allow overwrite without interactive prompt
alias cuc='cucumber'
alias ccze='ccze -Ao nolookups'  # Don't look up {user,service}names, etc.
alias df="colourify df --block-size=\\'1K"  #'"
alias df,='colourify df'
alias home='git --git-dir=$HOME/.githome --work-tree=$HOME'
alias lesc='less-compressed-wrapper'
alias mosh='mosh --predict=experimental'  # https://github.com/mobile-shell/mosh/issues/878
alias mv='mv -i'
alias Mv='command mv'  # Allow overwrite
alias restix="restic -x --exclude-caches --exclude-file=$HOME/etc/restic/exclude"
alias rga='rg --hidden --no-ignore'
alias rm='rm -I'  # Prompt on -r or >3 files
alias Rm='command rm'
alias setvars='(set -o posix; set)'
alias trunc='cut -c -${COLUMNS:-80}'
alias vimpager='$XDG_DATA_HOME/vim/bundle/vimpager/vimpager'
alias btrbk_prune_wipe_preserve_backups='sudo btrbk prune --wipe --preserve-backups'

# sudo, nicest, idle with and without aliases

# Allow both aliases and functions to be run
# TODO: rename this to fn?  have separate versions for just fns, aliases and both?
alias alia='"$SHELL" "$HOME"/bin/alia'

alias asudo='sudo '  # Shell will do alias expansion with trailing space. No aliases or functions.

alias isudo='idle sudo'
alias iasudo='idle sudo '

alias nsudo='nicest sudo'
alias nasudo='nicest sudo '

alias n='nicest'
alias na='nicest alia'

alias i='idle'
alias ia='idle alia'

# TODO: Allow functions to be run like:  nasudo shell_quote a 'b c' d
# Below aliasudo null a 'b c' d   works ok, but not    aliasudo token_quote a 'b c' d
# alias aliasudo='alia asudo'
# alias nasudo='nicest alia aliasudo '


# Have pacmatic wrap aurman/pakku wrap powerpill wrap pacman
# https://unix.stackexchange.com/a/384102/143394
alias pac='yay'  # For convenience.

# pacmatic needs to be run as root: https://github.com/keenerd/pacmatic/issues/35
# Seems that PYTHONPATH is not longer needed
# alias pacmatic='PYTHONPATH=/usr/lib/python3.6/site-packages sudo --preserve-env=pacman_program,PYTHON_PATH /usr/bin/pacmatic'
# alias pacmatic='sudo --preserve-env=pacman_program,PYTHON_PATH /usr/bin/pacmatic'
alias pacmatic='LESS=${LESS/F/} sudo --preserve-env=LESS,pacman_program /usr/bin/pacmatic'  # Remove less -F == --quit-if-one-screen.
# Downgrade permissions as AUR helpers expect to be run as a non-root user. $UID is read-only in {ba,z}sh.
alias aurman=' pacman_program="sudo -u #$UID /usr/bin/aurman" pacmatic'
alias aurmano='pacman_program="sudo -u #$UID /usr/bin/aurman --optimistic_versioning" pacmatic'
alias pakku='  pacman_program="sudo -u #$UID /usr/bin/pakku"  pacmatic'
alias yay='    pacman_program="sudo -u #$UID /usr/bin/yay --pacman powerpill" pacmatic'

# tmux / tmuxinator
alias tmux='tmux -f "$XDG_CONFIG_HOME"/tmux/tmux.conf'
alias mux='tmuxinator'

# head & tail
alias head='head -n $((${LINES:-12}-2))' # as many as possible without scrolling
alias tail='tail -n $((${LINES:-12}-2)) --sleep-interval=0.2' # 200ms

# Clipboard
alias pbcopy="sed -Ez '$ s/\\n+\$//' | xclip -selection clipboard -in"
alias pbpaste='xclip -selection clipboard -out'

# rsync
alias rscp='rsync -ax --partial --sparse --xattrs --no-whole-file --inplace --protect-args'
alias rsmv='rscp --remove-source-files'
alias droidsync='f(){ rsync "$@" --no-p --no-o --no-g --rsync-path="su root rsync";};f'
# FAT stores to two-second accuracy, NTFS 100 nanoseconds
# https://corengen.wordpress.com/2010/03/22/comparing-file-timestamps-on-ntfs-and-fat32/
alias fatrsync='f(){ rsync "$@" --modify-window=2 --no-p --no-o --no-g;};f'  # Allow for -a or other options

# pygmentize
alias pcat='pygmentize -f terminal256 -O style=monokai -g'
alias pless='f(){ pygmentize -f terminal256 -O style=monokai -g "$@" | less -L; };f'

# Change to git root directory
alias cdgr='builtin cd "$(git rev-parse --show-toplevel)"'  # cd '' does nothing

# Hooks don't run with named environment
# https://github.com/conda/conda/issues/7862
alias activate='f(){ source $XDG_DATA_HOME/miniconda3/bin/activate "$@"; source prompt-update; }; f'
alias deactivate='f(){ source $XDG_DATA_HOME/miniconda3/bin/deactivate "$@"; source prompt-update; }; f'


# Expand an alias as text - https://unix.stackexchange.com/q/463327/143394
# Doesn't expand recursively
function alias_expand {
  if [[ $ZSH_VERSION ]]; then
    # shellcheck disable=2154  # aliases referenced but not assigned
    [ ${aliases[$1]+x} ] && printf '%s\n' "${aliases[$1]}" && return
  else  # bash
    [ "${BASH_ALIASES[$1]+x}" ] && printf '%s\n' "${BASH_ALIASES[$1]}" && return
  fi
  false  # Error: alias not defined
}


# Git / Hub aliases

# Import my user config when run as root
# See https://serverfault.com/a/334730/322507 for exporting GIT_* variables via ssh
alias gsu='sudo git -c "include.path='"${XDG_CONFIG_DIR:-$HOME/.config}/git/config\" -c \"include.path=$HOME/.gitconfig\""

# if command -v lab > /dev/null; then  # lab wraps either hub or git
#   alias g='lab' git='lab'
# elif command -v hub > /dev/null; then  # hub wraps git
#   alias g='hub' git='hub'
# else
#   alias g='git'
# fi

# TODO check difference in aliases after sourcing scmb
# shellcheck disable=2034  # exec_scmb_expand_args appears unused, verify or export
# shellcheck disable=2139  # Expand at definition time
if typeset -f exec_scmb_expand_args > /dev/null; then
  # alias g="exec_scmb_expand_args $(alias_expand g)"
  # alias git > /dev/null && alias git="exec_scmb_expand_args $(alias_expand git)"

  # Colourise ll alias output if grc is installed
  if command -v grcat > /dev/null; then
    alias ll='f() { exec_scmb_expand_args ls_with_file_shortcuts "$@" | grcat conf.ls; }; f'
  fi
fi


##
## Begin bash only  (zsh-only follows)
##
if [[ $BASH_VERSION ]]; then

  alias as_bash=''  # zshrc has the zsh counterpart

  # Completions for aliases
  # https://brbsix.github.io/2015/11/23/perform-tab-completion-for-aliases-in-bash/
  # https://unix.stackexchange.com/questions/4219/how-do-i-get-bash-completion-for-command-aliases
  # General format: complete -o bashdefault -o default -o nospace -F _git g
  if typeset -f _completion_loader > /dev/null; then
    _completion_loader systemctl; complete -o bashdefault -o default -o nospace -F _systemctl sc
  fi

  # Allow completion for git aliases defined above
  # See https://github.com/cykerway/complete-alias for a generic solution
  if is_function __git_complete; then
    __git_complete g __git_main
    __git_complete home __git_main
    __git_complete s _git_status
  fi
fi

##
## End bash only
##

[[ $BASH_VERSION ]] && return

##
## zsh only from here until EOF
##

[[ $ZSH_VERSION ]] && {
  alias -g ...='../..'
  alias -g ....='../../..'
  alias -g .....='../../../..'
  alias -g B='  | bust'  # Head
  alias -g BA='|& bust'
  alias -g C='| wc -l'
  alias -g DN='    /dev/null'
  alias -g DNO=' > /dev/null'
  alias -g DNA='&> /dev/null'
  alias -g DNE='2> /dev/null'
  alias -g H='  | head'  # Head
  alias -g HA='|& head'
  alias -g G=' | grep -E'  # egrep is deprecated
  alias -g GA='|& grep -E'
  alias -g GI=' | grep -Ei'
  alias -g GIV=' | grep -Eiv'
  alias -g GV=' | grep -Ev'
  alias -g L="  | less"
  alias -g LA=" |& less"
  alias -g LS=" | less -S"  # -S or --chop-long-lines
  alias -g LSA="|& less -S"  # -S or --chop-long-lines
  alias -g M='| more'
  # alias -g P='|'
  alias -g R='| rear'
  alias -g S=' | sort'
  alias -g SU='| sort -u'
  alias -g T='| tail'
  alias -g U='| uniq'
  alias -g W='| trunc'  # mnemonic: width
  alias -g X='| xargs'

# From zsh-lovers not yet checked
  alias -g CA="2>&1 | cat -A"
  alias -g D="DISPLAY=:0.0"
  alias -g ED="export DISPLAY=:0.0"
  alias -g ELS='|& less -S'
  alias -g ETL='|& tail -20'
  alias -g ET='|& tail'
  alias -g F=' | fmt -'
  alias -g Sk="*~(*.bz2|*.gz|*.tgz|*.zip|*.z)"
  alias -g LL="2>&1 | less"
  alias -g LS='| less -S'
  alias -g MM='| most'
  alias -g NE="2> /dev/null"
  alias -g S='| sort'
  alias -g SN='| sort -n'
  alias -g SRN='| sort -nr'
  alias -g SZ='| sort -z'
  alias -g VM='/var/log/messages'
  alias -g X0='| xargs -0'
  alias -g X0E='| xargs -0n1 echo'
  alias -g X0G='| xargs -0 egrep'
  alias -g XG='| xargs egrep'
}
