#!/bin/bash

set -euo pipefail; shopt -s failglob # safe mode

# XDG - set defaults as they may not be set (eg Ubuntu 14.04 LTS)
# See https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
# and https://wiki.archlinux.org/index.php/XDG_Base_Directory_support
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:=$HOME/.config}
export XDG_DATA_HOME=${XDG_DATA_HOME:=$HOME/.local/share}
export XDG_CACHE_HOME=${XDG_CACHE_HOME:=$HOME/.cache}

die() {
    echo "$*: $?"
    exit 1
}

function neobundle_update {
  local VIMRC=$XDG_CONFIG_HOME/vim/load-plugins.vim
  vim -N -u "$VIMRC" -c "try | NeoBundleUpdate! $* | finally | qall! | endtry" \
   -U NONE -i NONE -e -s -V1 # -V1 prints X error messages
}

cd -P -- "$(dirname "$0")"

echo "Updating submodules... (eg vim.  Wait - no output)"
git pull && git submodule update --init --recursive --recommend-shallow --depth 1
# --shallow-submodules not supported by Ubuntu

echo Submodule status:
git submodule status --recursive

# Stow packages
stow -v stow # Setup stow itself
# Install stow packages
./restow
echo "Stow of packages complete"

# Install fzf if not installed
if [[ ! -d "$XDG_DATA_HOME/fzf" ]]; then
  git clone --single-branch --depth 1 'https://github.com/junegunn/fzf.git' "$XDG_DATA_HOME/fzf"
  { yes || true; }  | "$XDG_DATA_HOME/fzf/install" --no-update-rc
  mv -i ~/.fzf.{bash,zsh} "$XDG_DATA_HOME/fzf/"
else
  echo "fzf already installed in $XDG_DATA_HOME/fzf"
fi

# Install neobundle to bootstrap vim plugin installation
neobundle_dir="$XDG_DATA_HOME/vim/bundle/neobundle.vim"
if [[ ! -d $neobundle_dir ]]; then
  git clone --single-branch --depth 1 --shallow-submodules https://github.com/Shougo/neobundle.vim.git "$neobundle_dir"
else
  echo "NeoBundle already installed in $neobundle_dir"
fi

# vim plugins
echo "Installing vimproc for parallel vim plugin updates..."
neobundle_update vimproc
echo "Install/update all plugins..."
neobundle_update

echo
echo "YouCompleteMe vim plugin fetch and build:"
echo
# shellcheck disable=SC2016
echo '(cd $XDG_DATA_HOME/vim/bundle/YouCompleteMe &&'
echo 'git submodule update --init --recursive --depth 1 &&'
echo './install.py --clang-completer)'
echo
