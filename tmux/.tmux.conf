# Killer tmux config: https://github.com/gpakosz/.tmux
# vi-like copy/paste: https://leanside.com/2014/01/copy-paste-in-tmux/

# Various to file later on
set-option -g status-keys vi
set-option -g history-limit 8192

# Use ` key for tmux prefix
set -g prefix `
set -g prefix2 C-b # so it works as expected for others
bind `   send-prefix
bind C-b send-prefix -2

# turn off ` as prefix
# cat says that Ctrl-` produces ^@ ... let's run with it...
bind C-@ set -g prefix ` \; display "Prefix set to `.  Use <prefix> C-M-b to disable."
bind C-M-b set -g prefix C-b \; display "Prefix ` disabled. Use <prefix> C-` to restore"

# If needing to type a lot of backticks: In .tmux.conf I also have
# bind-key C-a set-option -g prefix C-a. Whenever I need to use
# backticks I hit `-Ctrl-a which sets my prefix to C-a. And I have
# bind-key C-b set-option -g prefix ` so I can hit C-a-C-b to go back

# toggle last window by mushing down from the ` key
bind-key Tab last-window

# open %% man page
bind C-m command-prompt -p "Open man page for:" "new-window 'exec man %%'"

# quick view of processes
bind '~' split-window "exec sh -c htop || top"

# copy tmux buffer to clipboard
bind C-y run "tmux show-buffer | xsel -b"
# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xsel -o)\"; tmux paste-buffer"

# set vi keys
setw -g mode-keys vi
# unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Set 256 colors only if the TERM supports it TODO
# Something like:   # Statusbar starting in X or not
# if '[ -n "$DISPLAY" ]' 'source-file ~/.tmux/inx'
# if '[ -z "$DISPLAY" ]' 'source-file ~/.tmux/xless'
set -g default-terminal "screen-256color"

# Remove symbols after window names
# set -g window-status-format "#I:#W"
# set -g window-status-current-format "#I:#W"

# Set environment NEEDED???
# set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# Available colours:
# default, black, red, green, yellow, blue, magenta, cyan, white
# colour0 to colour255 from the 256-colour palette

# Command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Default statusbar colors
set -g status-fg white
set -g status-bg default

# Window status line colouring
set-window-option -g window-status-bg default
set-window-option -g window-status-fg default

set-window-option -g window-status-current-bg cyan
set-window-option -g window-status-current-fg default

set-window-option -g window-status-bell-fg red
set-window-option -g window-status-bell-bg black

set-window-option -g window-status-activity-fg white
set-window-option -g window-status-activity-bg black

set-window-option -g clock-mode-colour red
set-window-option -g clock-mode-style 24

# utf8 is on
set -g utf8 on
set -g status-utf8 on

# don't rename windows automatically when manually giving names using
# <leader> ,
# set-option -g allow-rename off

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Index starting from 1 as '0' key is a bit of a stretch
set -g base-index 1
# required by tmuxinator if base-index is set
set-window-option -g pane-base-index 1

# Enable mouse mode by default
# set -g mouse on # Enable mouse mode by default (tmux 2.1 and above)
set -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

# Allow easy copy/paste
# use z to zoom/unzoom a pane
# toggle mouse mode to allow mouse copy/paste

# Not needed with tmux-yank plugin (tmux v1.9+)
# # set mouse ON with prefix m
# bind m \
#     set -g mode-mouse on \;\
#     set -g mouse-resize-pane on \;\
#     set -g mouse-select-pane on \;\
#     set -g mouse-select-window on \;\
#     run tmux-zoom-in.sh \; 
#     display 'Mouse: ON'
#
# # set mouse OFF with prefix M
# bind M \
#     set -g mode-mouse off \;\
#     set -g mouse-resize-pane off \;\
#     set -g mouse-select-pane off \;\
#     set -g mouse-select-window off \;\
#     run tmux-zoom-out.sh \;\
#     display 'Mouse: OFF'

# Just use <prefix> z
# unbind +
bind + run tmux-zoom-in.sh
# unbind -
bind - run tmux-zoom-out.sh
# bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

# Window options
setw -g monitor-activity on
set -g visual-activity on
set -g window-status-current-attr bold

# Key bindings
# bind and bind-key are synonymous

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

bind-key s split-window -h # Split into a left and right
bind-key v split-window -v # Split into top and bottom (nmenonic: points down)

# Resize a line at a time without pressing prefix
bind-key -n M-S-Down resize-pane -D
bind-key -n M-S-Up resize-pane -U
bind-key -n M-S-Left resize-pane -L
bind-key -n M-S-Right resize-pane -R

# # Use Alt-arrow keys without prefix key to switch panes
# bind -n M-Left select-pane -L
# bind -n M-Right select-pane -R
# bind -n M-Up select-pane -U
# bind -n M-Down select-pane -D

# bind-key J resize-pane -D 20
# bind-key K resize-pane -U 20
# bind-key H resize-pane -L 20
# bind-key L resize-pane -R 20

# Switch panes: Use Alt-<vim key> without prefix
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Switch panes: Same again with prefix and lowercase
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# No delay for escape key press
# Default 500 is too long. Also (http://superuser.com/a/252717/65504)
set -sg escape-time 0 # Some say 10 is better, some say 0

# Next few are from: https://github.com/tmux-plugins/tmux-sensible
# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs # vi | emacs

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Reload tmux config (not a reset, cumulative only)
bind r source-file ~/.tmux.conf \; display "tmux.conf reloaded"

#
# Plugin settings
#

# tmux-yank
set -g @shell_mode 'vi' # if "set editing-mode vi"
#
# Readline bindings:
# prefix + y - copies text from the command line to clipboard.
# prefix + Y (shift-y) - copy pane current working directory to clipboard
#
# copy mode bindings:
# y - copy selection to system clipboard
# Y (shift-y) - "put" selection - equivalent to copying a selection, and pasting it to the command line

# tmux-open
# Usage: highlight a URL or filename and press 'o' to open it
# Ctrl-o to open it in $EDITOR

# tmux-copycat
# Usage:
# prefix + /       -  regex search (strings work too)
# prefix + ctrl-f  -  simple file search
# prefix + ctrl-g  -  jumping over git status files (best used after git status command)
# prefix + alt-h   -  jumping over SHA-1 hashes (best used after git log command)
# prefix + ctrl-u  -  url search (http, ftp and git urls)
# prefix + ctrl-d  -  number search (mnemonic d, as digit)
# prefix + alt-i   -  ip address search
# These start "copycat mode" and jump to first match.
#
# "Copycat mode" bindings
# n - jumps to the next match
# N - jumps to the previous match
#
# To copy a highlighted match:
# Enter - if you're using Tmux vi mode
# ctrl-w or alt-w - if you're using Tmux emacs mode
#
# Paste with prefix + ] (this is Tmux default paste).

#
# Plugins (using https://github.com/tmux-plugins/tpm )
#

# prefix + I - Installs new plugins listed below and refreshes TMUX environment
# prefix + U - Updates plugin(s)
# prefix + alt + u - remove/uninstall plugins not on the plugin list

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank' # https://github.com/tmux-plugins/tmux-yank
set -g @plugin 'tmux-plugins/tmux-open' # https://github.com/tmux-plugins/tmux-open
set -g @plugin 'tmux-plugins/tmux-copycat' # https://github.com/tmux-plugins/tmux-copycat

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# clone tpm if it doesn't exist
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
