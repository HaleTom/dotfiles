[user]
	name = Tom Hale
	email = tom@hale.ee

[core]
	editor = vim
	excludesfile = /home/ravi/.gitignore_global

	# convert newlines to system's standard on checkout,
	# and to LF when checking in
	# Eeek - causes addition of CR in linux
	# autocrlf = true

[alias]
	a     = add
	aa    = add -A
	# Add all untracked files
	au = "!f() { git ls-files -z -o --exclude-standard | xargs -0 git add; }; f"
	br    = branch
	co    = checkout
	cob   = checkout -b
	ca    = commit -a -vv
	# Pick chunks to include of changed files, include all untracked files.
	caa   = commit -a --amend --no-edit
	caaa   = "!f() { git add -A && git commit --amend --no-edit; }; f"
	cam   = commit -am  # note only changed files included
	cm    = commit -m
	ct    = commit
	cv    = commit -vv
	cvp   = "!f() { git commit -vv --patch; git st; }; f"
	cvpa   = "!f() { git commit -vv --patch && \
		git ls-files -z -o --exclude-standard | xargs -0 git add && \
		echo '# Add new files silently' > /dev/null && \
		git commit -a --amend --no-edit && \
		git status -s; }; f"
	dc    = diff --cached
	df    = diff
	dt    = difftool
	logd  = log --oneline --graph --decorate --remotes
	logda = log --oneline --graph --decorate --remotes --all
	ls    = ls-files
	psuo  = push --set-upstream origin
	pl    = pull
	ps    = push
	ri    = rebase -i HEAD~5
	sm    = submodule
	ss    = stash
	st    = status -s
	
	# Show files ignored by git
	ign = ls-files -o -i --exclude-standard
	
	# Create complex function then run it
	# http://blogs.atlassian.com/2014/10/advanced-git-aliases/
	bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"

	# Simple diff ignoring line number changes
	sortdiff = !sh -c 'git diff "$@" | grep "^[+-]" | sort --key=1.2 | uniq -u -s1'
	#
	
	editglobalconfig = "config -e --global"
	
[push]
	default = simple
[branch]
	# tell git-branch and git-checkout to setup new branches so that git-pull(1)
	# will appropriately merge from that remote branch.  Recommended.  Without this,
	# you will have to add --track to your branch command or manually merge remote
	# tracking branches with "fetch" and then "merge".
	autosetupmerge = true
	
[color]
	ui = auto
	[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
